name: Deploy

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  IMAGE_URL: ghcr.io/edvardsen-dev/portfolio/cms:latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Github Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_URL .

      - name: Push Docker Image
        run: |
          docker push $IMAGE_URL

  deploy:
    runs-on: ubuntu-latest
    env:
      APP_DIR: /root/apps/cms

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Create directory if not already exists
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: APP_DIR
          script: |
            mkdir -p $APP_DIR

      - name: Copy docker-compose file to VM
        run: |
          scp -o StrictHostKeyChecking=no ./docker-compose.prod.yaml ${{ secrets.SSH_USER }}@${{ secrets.VM_IP }}:$APP_DIR/docker-compose.prod.yaml

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.1.0
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GHCR_USER: ${{ github.actor }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          VOLUME_PATH: ${{ secrets.VOLUME_PATH }}
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: APP_DIR, GHCR_TOKEN, GHCR_USER, ADMIN_EMAIL, ADMIN_PASSWORD, VOLUME_PATH
          script: |
            # Log in to GitHub Container Registry
            echo "${GHCR_TOKEN}" | docker login ghcr.io -u $GHCR_USER --password-stdin

            # Change directory
            cd $APP_DIR

            # Create/Update the .env file with environment variables
            grep -qF "ADMIN_EMAIL" .env || echo "ADMIN_EMAIL=${ADMIN_EMAIL}" >> .env
            grep -qF "ADMIN_PASSWORD" .env || echo "ADMIN_PASSWORD=${ADMIN_PASSWORD}" >> .env
            grep -qF "VOLUME_PATH" .env || echo "VOLUME_PATH=${VOLUME_PATH}" >> .env

            # Pull lates images
            docker-compose -f docker-compose.prod.yaml Pull

            # Run the docker-compose file with env variables
            docker-compose -f docker-compose.prod.yaml up -d

            # Clean up dangling images
            docker image prune -f
